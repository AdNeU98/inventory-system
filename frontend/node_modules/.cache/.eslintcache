[{"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/index.js":"1","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/App.js":"2","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/reportWebVitals.js":"3","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/context/Auth.js":"4","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/navigation/Nav.jsx":"5","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/hooks/useLocalStorage.js":"6","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Login.js":"7","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Buyer/ManageBuyer.js":"8","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Product/ManageProduct.js":"9","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Home.js":"10","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Buyer/AddBuyer.js":"11","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Profile.js":"12","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Employee/ManageEmployee.js":"13","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Employee/AddEmployee.js":"14","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Product/AddProduct.js":"15","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/PurchaseOrder/ManagePurchaseOrder.js":"16","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/PurchaseOrder/AddPurchaseOrder.js":"17","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Invoice/ManageInvoice.js":"18","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/components/Layout/Layout.js":"19","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/utils/displayToast.js":"20","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/utils/validations.js":"21","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/components/Navbar/Sidenav.js":"22","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/routes/index.js":"23"},{"size":500,"mtime":1702347939000,"results":"24","hashOfConfig":"25"},{"size":213,"mtime":1702347939000,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1702347939000,"results":"27","hashOfConfig":"25"},{"size":605,"mtime":1702347939000,"results":"28","hashOfConfig":"25"},{"size":3101,"mtime":1713834767000,"results":"29","hashOfConfig":"25"},{"size":1581,"mtime":1702347939000,"results":"30","hashOfConfig":"25"},{"size":3805,"mtime":1713821033000,"results":"31","hashOfConfig":"25"},{"size":3989,"mtime":1702353954000,"results":"32","hashOfConfig":"25"},{"size":4083,"mtime":1713836175000,"results":"33","hashOfConfig":"25"},{"size":2066,"mtime":1713834767000,"results":"34","hashOfConfig":"25"},{"size":6137,"mtime":1702354630000,"results":"35","hashOfConfig":"25"},{"size":142,"mtime":1702347939000,"results":"36","hashOfConfig":"25"},{"size":3965,"mtime":1702347939000,"results":"37","hashOfConfig":"25"},{"size":9765,"mtime":1702347939000,"results":"38","hashOfConfig":"25"},{"size":6254,"mtime":1702354549000,"results":"39","hashOfConfig":"25"},{"size":6491,"mtime":1702354856000,"results":"40","hashOfConfig":"25"},{"size":15166,"mtime":1702354795000,"results":"41","hashOfConfig":"25"},{"size":2386,"mtime":1702347939000,"results":"42","hashOfConfig":"25"},{"size":757,"mtime":1702353132000,"results":"43","hashOfConfig":"25"},{"size":198,"mtime":1702347939000,"results":"44","hashOfConfig":"25"},{"size":323,"mtime":1702347939000,"results":"45","hashOfConfig":"25"},{"size":5692,"mtime":1713822009000,"results":"46","hashOfConfig":"25"},{"size":1109,"mtime":1702347939000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fskj6z",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/index.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/App.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/reportWebVitals.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/context/Auth.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/navigation/Nav.jsx",["105"],"import React, { useContext } from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Layout from '../components/Layout/Layout';\nimport { AuthContext } from '../context/Auth';\nimport AddProduct from '../pages/Product/AddProduct';\nimport ManageProduct from '../pages/Product/ManageProduct';\nimport Login from '../pages/Login';\nimport ManageBuyer from '../pages/Buyer/ManageBuyer';\nimport AddBuyer from '../pages/Buyer/AddBuyer';\nimport Profile from '../pages/Profile';\nimport ManageEmployee from '../pages/Employee/ManageEmployee';\nimport AddEmployee from '../pages/Employee/AddEmployee';\nimport ManagePurchaseOrder from '../pages/PurchaseOrder/ManagePurchaseOrder';\nimport AddPurchaseOrder from '../pages/PurchaseOrder/AddPurchaseOrder';\nimport Home from '../pages/Home';\nimport ManageInvoice from '../pages/Invoice/ManageInvoice';\nimport ParticlesBg from \"particles-bg\";\n\nfunction RouteWrapper({\n  component: Component,\n  TransparentNav,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => <Layout {...props} TransparentNav={TransparentNav}>\n        <Component {...props} />\n      </Layout>} />\n  );\n}\n\nfunction Nav() {\n\n  const { isLoggedIn, userData } = useContext(AuthContext);\n\n  return (\n    \n    <BrowserRouter baseName=\"/\">\n      <Switch>\n        {isLoggedIn ? (\n          <React.Fragment>\n            <ParticlesBg type=\"circle\" bg={true}></ParticlesBg>\n            <RouteWrapper path=\"/manage-products\" exact component={ManageProduct} />\n            <RouteWrapper path=\"/add-product\" exact component={AddProduct} />\n            <RouteWrapper path=\"/edit-product\" exact component={AddProduct} />\n\n            <RouteWrapper path=\"/manage-buyers\" exact component={ManageBuyer} />\n            <RouteWrapper path=\"/add-buyer\" exact component={AddBuyer} />\n            <RouteWrapper path=\"/edit-buyer/\" exact component={AddBuyer} />\n\n            {userData.designation.toUpperCase() === 'MANAGER' && (\n              <React.Fragment>\n                <RouteWrapper path=\"/manage-employees\" exact component={ManageEmployee} />\n                <RouteWrapper path=\"/add-employee\" exact component={AddEmployee} />\n                <RouteWrapper path=\"/edit-employee/\" exact component={AddEmployee} />\n              </React.Fragment>\n            )}\n           \n            <RouteWrapper path=\"/manage-purchase-order\" exact component={ManagePurchaseOrder} />\n            <RouteWrapper path=\"/add-purchase-order\" exact component={AddPurchaseOrder} />\n            <RouteWrapper path=\"/view-purchase-order/\" exact component={AddPurchaseOrder} />\n            \n            <RouteWrapper path=\"/manage-invoice\" exact component={ManageInvoice} />\n\n            <RouteWrapper path=\"/home\" exact component={Home} />\n            <RouteWrapper path=\"/\" exact component={Home} />\n            \n          </React.Fragment>\n        ) : (\n          <RouteWrapper path=\"/\" exact component={Login} />\n        )}\n        \n        <Route exact path=\"/\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Nav;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/hooks/useLocalStorage.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Login.js",["106","107","108","109"],"import React, { useReducer, useContext } from \"react\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\nimport \"../styles/Login.scss\";\nimport displayToast from \"../utils/displayToast\";\nimport { validateInputField } from \"../utils/validations\";\nimport axios from \"axios\";\nimport { URLS } from \"../routes\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../context/Auth\";\n\nconst initialState = {\n  userName: \"\",\n  password: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_NAME\":\n      return {\n        ...state,\n        userName: action.userName,\n      };\n\n    case \"USER_PASSWORD\":\n      return {\n        ...state,\n        password: action.password,\n      };\n\n    case \"RESET\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nfunction Login() {\n  const { userData, setUserData, isLoggedIn } = useContext(AuthContext);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const history = useHistory();\n\n  const handleUserNameChange = (event) => {\n    dispatch({\n      type: \"USER_NAME\",\n      userName: event.target.value,\n    });\n  };\n\n  const handlePasswordChange = (event) => {\n    dispatch({\n      type: \"USER_PASSWORD\",\n      password: event.target.value,\n    });\n  };\n\n  const { userName, password } = state;\n\n  const submitForm = (e) => {\n    e.preventDefault();\n\n    if (\n      validateInputField({ field: userName, fieldName: \"user name\" }) &&\n      validateInputField({ field: password, fieldName: \"password\" })\n    ) {\n      const body = { username: userName, password };\n\n      axios\n        .post(URLS.VERIFY_USER, body)\n        .then(function (response) {\n          // console.log(response);\n          const { status } = response;\n\n          if (status == 200) {\n            if (response.data && response.data.id) {\n              setUserData(response.data);\n              resetForm();\n              displayToast({ type: \"success\", msg: \"Login Successful!\" });\n            } else {\n              displayToast({\n                type: \"error\",\n                msg: \"Please enter valid credentials!\",\n              });\n            }\n          }\n          // setTimeout(() => {\n          //     history.push(\"/manage-buyers\");\n          //   }, 1000);\n        })\n        .catch(function (error) {\n          console.log(error);\n          displayToast({ type: \"error\", msg: \"Oops! Something went wrong\" });\n        });\n    } else {\n      // displayToast({type : \"error\", msg : \"Login Failed!\"});\n    }\n  };\n\n  const resetForm = () => {\n    dispatch({\n      type: \"RESET\",\n    });\n  };\n\n  return (\n    <div className=\"login-bg\" >\n      <Row className=\"login--row\">\n        <Col md={{ span: 8, offset: 2 }}>\n          <div style={{textAlign:'center'}}>\n          <h1 style={{ color: 'black', fontweight:'bold' }}>Inventory Control System</h1>\n          </div>\n          <br />\n          <Form onSubmit={submitForm}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicUserName\">\n              <Form.Label >User Name</Form.Label>\n              <Form.Control\n                value={userName}\n                onChange={handleUserNameChange}\n                type=\"text\"\n                placeholder=\"Enter user name\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                value={password}\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={handlePasswordChange}\n              />\n            </Form.Group>\n            <Button size=\"lg\" variant=\"dark\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Buyer/ManageBuyer.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Product/ManageProduct.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Home.js",["110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React from \"react\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport \"../styles/home.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ParticlesBg  from \"particles-bg\"\nimport {\n  faCoffee,\n  faFileInvoiceDollar,\n  faFileAlt,\n  faFileDownload,\n  faShoppingBasket,\n  faUserTie,\n  faAddressCard,\n  faEuroSign,\n  faWeight,\n  faBalanceScale,\n  faWeightHanging,\n  faBox,\n  faPeopleCarry,\n  faMoneyBill,\n  faBookmark\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport bg from \"../assets/back.jpg\";\n\nvar sectionStyle = {\n  width: \"100%\",\n  height: \"400px\",\n  backgroundImage: `url(${bg})`,\n};\nconst DATA = [\n  {\n    id: 1,\n    title: \"Purchase Orders\",\n    count: 10,\n    icon: faMoneyBill,\n    \n  },\n  {\n    id: 3,\n    title: \"Products\",\n    count: 5,\n    icon: faAddressCard,\n  },\n  {\n    id: 4,\n    title: \"Buyers\",\n    count: 3,\n    icon: faPeopleCarry,\n  },\n  {\n    id: 6,\n    title: \"Total Amount\",\n    count: 190000,\n    icon: faEuroSign,\n  },\n  {\n    id: 7,\n    title: \"Total Orders\",\n    count: 40,\n    icon: faBookmark,\n  },\n];\n\nfunction Home() {\n  return (\n    <div>\n        <Container>\n          <Row className=\"container-main\">\n            {DATA.map((item, i) => {\n              let color = \"primary\";\n\n              if (i === 1 || i === 5) {\n                color = \"danger\";\n              } else if (i === 2 || i === 6) {\n                color = \"info\";\n              } else if (i === 3 || i === 7) {\n                color = \"success\";\n              }\n\n              return (\n                <Col md={4} className=\"dashboard-cards\">\n                  <div className={`card-counter ${color}`} style={{borderRadius:'75%'}}>\n                    <FontAwesomeIcon icon={item.icon} className=\"card--icon\" />\n                    <span className=\"count-numbers\">{item.count}</span>\n                    <span className=\"count-name\">{item.title}</span>\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Buyer/AddBuyer.js",["123"],"import axios from \"axios\";\nimport React, { useReducer, useState, useEffect } from \"react\";\nimport { Container, Row, Col, Form, Card, Button } from \"react-bootstrap\";\nimport { URLS } from \"../../routes\";\nimport displayToast from \"../../utils/displayToast\";\nimport { validateInputField } from \"../../utils/validations\";\nimport { useHistory, useLocation } from \"react-router\";\n\nconst initialState = {\n  ownerName: \"\",\n  companyName: \"\",\n  zipcode: \"\",\n  id: -1,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"BUYER_NAME\":\n      return {\n        ...state,\n        ownerName: action.ownerName,\n      };\n\n    case \"COMPANY_NAME\":\n      return {\n        ...state,\n        companyName: action.companyName,\n      };\n\n    case \"COMPANY_ZIPCODE\":\n      return {\n        ...state,\n        zipcode: action.zipcode,\n      };\n\n    case \"RESET\":\n      return initialState;\n\n    case \"UPDATE_ALL_FIELDS\":\n      return action.state;\n\n    default:\n      return state;\n  }\n};\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction AddBuyer() {\n  let query = useQuery();\n  const buyerId = query.get(\"id\");\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { ownerName, companyName, zipcode, id } = state;\n  const history = useHistory();\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let isActive = true;\n    let isPageUpdate = false;\n\n    if (buyerId) {\n      isPageUpdate = true;\n    }\n    setIsUpdate(isPageUpdate);\n\n    if (isActive && isPageUpdate) {\n      setIsLoading(true);\n      fetchBuyer();\n    } else {\n      setIsLoading(false);\n    }\n    return () => {\n      isActive = false;\n    };\n  }, []);\n\n  const fetchBuyer = async () => {\n    const url = `${URLS.GET_BUYER_DETAILS}/${buyerId}`;\n\n    axios\n      .get(url)\n      .then(function (response) {\n        setIsLoading(false);\n        // console.log({response});\n        // debugger;\n        dispatch({ type: \"UPDATE_ALL_FIELDS\", state: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: \"error\", msg: error.msg });\n      });\n  };\n\n  const handleOwnerNameChange = (event) => {\n    dispatch({\n      type: \"BUYER_NAME\",\n      ownerName: event.target.value,\n    });\n  };\n\n  const handleCompanyNameChange = (event) => {\n    dispatch({\n      type: \"COMPANY_NAME\",\n      companyName: event.target.value,\n    });\n  };\n\n  const handleZipcodeChange = (event) => {\n    dispatch({\n      type: \"COMPANY_ZIPCODE\",\n      zipcode: event.target.value,\n    });\n  };\n\n  const resetForm = () => {\n    dispatch({\n      type: \"RESET\",\n    });\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    if (\n      validateInputField({ field: ownerName, fieldName: \"owner name\" }) &&\n      validateInputField({ field: companyName, fieldName: \"company name\" }) &&\n      validateInputField({ field: zipcode, fieldName: \"zipcode\" })\n    ) {\n      const body = { ownerName, companyName, zipcode };\n      const url = isUpdate ? `${URLS.EDIT_BUYER}/${buyerId}` : URLS.ADD_BUYER;\n\n      if (isUpdate) {\n        body.id = id;\n      }\n\n      axios[isUpdate ? \"put\" : \"post\"](url, body)\n        .then(function (response) {\n          const { status } = response;\n          if (status === 200) {\n            resetForm();\n            displayToast({\n              type: \"success\",\n              msg: `${\n                isUpdate ? ownerName + \" updated\" : \"Buyer added\"\n              } successfully!`,\n            });\n            setIsLoading(false);\n            setTimeout(() => {\n              history.push(\"/manage-buyers\");\n            }, 1000);\n          } else {\n            displayToast({ type: \"error\", msg: \"Oops! Something went wrong.\" });\n            setIsLoading(false);\n          }\n        })\n        .catch(function (error) {\n          setIsLoading(false);\n          console.log(error);\n          displayToast({ type: \"error\", msg: error.msg });\n        });\n    } else {\n      setIsLoading(false);\n      // displayToast({type : \"error\", msg : \"Login Failed!\"});\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Container fluid=\"lg\">\n        <Row className=\"container-main\">\n          <Col>\n            <h3 className=\"center-align\" style={{color:'teal'}}>\n              {isUpdate ? \"Update\" : \"Add\"} Buyer\n            </h3>\n          </Col>\n        </Row>\n        <Row className=\"container-main\">\n          <Col md={{ span: 6, offset: 3 }}>\n            <Card>\n              <Card.Body>\n                <Form onSubmit={submitForm}>\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicownerName\">\n                    <Form.Label>Owner Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={ownerName}\n                      onChange={handleOwnerNameChange}\n                      placeholder=\"Enter Buyer Name\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicCompanyName\">\n                    <Form.Label>Company Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={companyName}\n                      onChange={handleCompanyNameChange}\n                      placeholder=\"Enter Company Name\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicZipcode\">\n                    <Form.Label>Zipcode</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={zipcode}\n                      onChange={handleZipcodeChange}\n                      placeholder=\"Enter Zipcode\"\n                    />\n                  </Form.Group>\n\n                  <Button disabled={isLoading} variant=\"success\" type=\"submit\">\n                    Save\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default AddBuyer;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Profile.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Employee/ManageEmployee.js",["124"],"// ManageEmployee.js\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Button, Col, Table, Modal, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { URLS } from '../../routes';\nimport displayToast from '../../utils/displayToast';\nimport './ManageEmployee.css';\n\n// import './manage-employees.css'; // Import manage-employees.css file\n\nfunction ManageEmployee() {\n  const [employees, setEmployees] = useState([]);\n  const [currentEmployee, setCurrentEmployee] = useState(null);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => {\n    setShow(false);\n    setCurrentEmployee(null);\n  };\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    let isActive = true;\n\n    if (isActive) {\n      fetchEmployees();\n    }\n    return () => {\n      isActive = false;\n    };\n  }, []);\n\n  const fetchEmployees = async () => {\n    const url = URLS.GET_ALL_EMPLOYEES;\n    axios\n      .get(url)\n      .then(function (response) {\n        // console.log(response);\n        setEmployees(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: 'error', msg: 'Oops! Something went wrong' });\n      });\n  };\n\n  const deleteEmployeeConfirmation = (b) => {\n    setCurrentEmployee(b);\n    handleShow();\n  };\n\n  const deleteEmployee = async () => {\n    const url = URLS.DELETE_EMPLOYEE + currentEmployee.id;\n    axios\n      .delete(url)\n      .then(function (response) {\n        handleClose();\n        displayToast({ type: 'success', msg: 'Employee deleted successfully!' });\n        fetchEmployees();\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: 'error', msg: 'Oops! Something went wrong' });\n      });\n  };\n\n  return (\n    \n<Container className=\"container-main\">\n    <Row className=\"header-row\">\n      <Col md={6}>\n        <h3>Employee List</h3>\n      </Col>\n      <Col md={6} className=\"add-product-col\">\n        <Link to=\"/add-employee\">\n          <Button variant=\"primary\" className=\"add-product-button\" >\n          Add New Employee\n          </Button>\n        </Link>\n\t\t\n        </Col>\n        \n      </Row>\n      <Row>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Sr. No.</th>\n              <th>Full Name</th>\n              <th>Designation</th>\n              {/* Add other table headers as needed */}\n              <th>Action</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {employees.map((employee, index) => {\n              const { id, fullName, designation } = employee;\n\n              return (\n                <tr key={id}>\n                  <td>{index + 1}</td>\n                  <td>{fullName}</td>\n                  <td>{designation}</td>\n                  {/* Add other table cells as needed */}\n                  <td>\n                    <Link to={`/edit-employee/?id=${id}`}>\n                      <Button variant=\"primary\">Edit</Button>{' '}\n                    </Link>\n                    <Button onClick={() => deleteEmployeeConfirmation(employee)} variant=\"danger\">\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Row>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete {currentEmployee ? currentEmployee.fullName : ''}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={deleteEmployee}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default ManageEmployee;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Employee/AddEmployee.js",["125"],"import axios from 'axios';\nimport React, {useReducer, useState, useEffect, useContext} from 'react';\nimport { Container, Row, Col, Form, Card, Button } from 'react-bootstrap';\nimport { URLS } from '../../routes';\nimport displayToast from '../../utils/displayToast';\nimport { validateInputField } from '../../utils/validations';\nimport { useHistory, useLocation } from 'react-router';\nimport { AuthContext } from '../../context/Auth';\n\nconst initialState = {\n    fullName: '',\n    designation : \"\",\n    username : \"\",\n    salary : \"\",\n    dob : \"\",\n    rating : \"\",\n    password : \"\",\n    id : -1\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'EMPLOYEE_NAME':\n            return {\n                ...state,\n                fullName: action.fullName\n            };\n\n        case 'USER_NAME':\n            return {\n                ...state,\n                username: action.username\n            };\n\n        case 'EMPLOYEE_DESIGNATION':\n            return {\n                ...state,\n                designation: action.designation\n            };\n\n        case 'EMPLOYEE_SALARY':\n                return {\n                    ...state,\n                    salary: action.salary\n        };\n\n        case 'EMPLOYEE_DOB':\n                return {\n                    ...state,\n                    dob: action.dob\n        }; \n            \n        case 'EMPLOYEE_RATING':\n                return {\n                    ...state,\n                    rating: action.rating\n        };\n\n        case 'EMPLOYEE_PASSWORD':\n                return {\n                    ...state,\n                    password: action.password\n        };\n\n        case 'RESET':\n            return initialState;\n\n        case 'UPDATE_ALL_FIELDS':\n            return action.state;    \n\n        default:\n            return state;\n    }\n};\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction AddEmployee() {\n    \n    let query = useQuery();\n    const employeeId = query.get(\"id\");\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const {fullName, username, salary, dob, rating, designation, id, password} = state;\n    const history = useHistory();\n    const [isUpdate, setIsUpdate] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const {userData} = useContext(AuthContext);\n\n    useEffect(() => {\n        let isActive = true;\n        let isPageUpdate = false;\n\n        if(employeeId){\n            isPageUpdate = true;\n        }\n        setIsUpdate(isPageUpdate);\n\n        if(isActive && isPageUpdate) {\n            setIsLoading(true);\n            fetchEmployee();\n        }else{\n            setIsLoading(false);\n        }\n        return () => {\n            isActive = false;\n        }\n    }, []);\n\n    const fetchEmployee = async () => {\n        const url  = `${URLS.GET_EMPLOYEE_DETAILS}/${employeeId}`;\n\n        axios.get(url)\n              .then(function (response) {\n                setIsLoading(false);\n                dispatch({type: 'UPDATE_ALL_FIELDS', state: response.data});\n              })\n              .catch(function (error) {\n                  \n                console.log(error);\n                displayToast({type : \"error\", msg : error.msg});\n              });\n    }\n\n    const handleFullNameChange = (event) => {\n        dispatch({type: 'EMPLOYEE_NAME', fullName: event.target.value});\n    }\n\n    const handleUserNameChange = (event) => {\n        dispatch({type: 'USER_NAME', username: event.target.value});\n    }\n\n    const handlePasswordChange = (event) => {\n        dispatch({type: 'EMPLOYEE_PASSWORD', password: event.target.value});\n    }\n    \n    const handleSalaryChange = (event) => {\n        dispatch({type: 'EMPLOYEE_SALARY', salary: event.target.value});\n    }\n\n    const handleRatingChange = (event) => {\n        dispatch({type: 'EMPLOYEE_RATING', rating: event.target.value});\n    }\n\n    const handleDesignationChange = (event) => {\n        dispatch({type: 'EMPLOYEE_DESIGNATION', designation: event.target.value});\n    }\n    \n    const handleDobChange = (event) => {\n        dispatch({type: 'EMPLOYEE_DOB', dob: event.target.value});\n    };\n\n    const resetForm = () => {\n        dispatch({\n            type : 'RESET'\n        });\n    }\n\n    const submitForm = (e) =>{\n        e.preventDefault();\n        setIsLoading(true);\n\n        if (validateInputField({field : fullName, fieldName : \"full name\"}) && \n            validateInputField({field : username, fieldName : \"user name\"}) &&\n            validateInputField({field : salary, fieldName : \"salary\"}) &&\n            validateInputField({field : dob, fieldName : \"dob\"}) &&\n            validateInputField({field : designation, fieldName : \"designation\"}) &&\n            validateInputField({field : password, fieldName : \"password\"})) {\n            const body = {fullName, username, salary, dob, rating, designation, id, password, userId : userData.id};\n            const url = isUpdate ? URLS.EDIT_EMPLOYEE : URLS.ADD_EMPLOYEE;\n            \n            if(isUpdate){\n                body.id = id;\n            };\n            \n            axios[isUpdate ? \"put\" : \"post\"](url, body)\n              .then(function (response) {\n                const {status} = response;\n                if(status === 200){\n                    resetForm();\n                    displayToast({type : \"success\", msg : `${isUpdate ? fullName + ' updated' : 'Employee added'} successfully!`});\n                    setIsLoading(false);\n                    setTimeout(() => {\n                        history.push(\"/manage-employees\");\n                    }, 1000);\n                }else{\n                    displayToast({type : \"error\", msg : \"Oops! Something went wrong.\"});\n                    setIsLoading(false);\n                }\n              })\n              .catch(function (error) {\n                setIsLoading(false);\n                console.log(error);\n                displayToast({type : \"error\", msg : error.msg});\n              });\n\n        }else{\n            setIsLoading(false);\n           // displayToast({type : \"error\", msg : \"Login Failed!\"});\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Container fluid=\"lg\">\n                <Row className=\"container-main\">\n                    <Col>\n                        <h3 className=\"center-align\">{isUpdate ? \"Update\" : \"Add\"} Employee</h3>\n                    </Col>\n                </Row>\n                <Row className=\"container-main\">\n                    <Col md={{span : 6, offset : 3}}>\n                      <Card>\n                         <Card.Body>\n                            <Form onSubmit={submitForm}>\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicFullName\">\n                                    <Form.Label>Full Name</Form.Label>\n                                    <Form.Control type=\"text\" value={fullName} onChange={handleFullNameChange} placeholder=\"Enter Full Name\" />\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicUserName\">\n                                    <Form.Label>User Name</Form.Label>\n                                    <Form.Control type=\"text\" value={username} onChange={handleUserNameChange} placeholder=\"Enter User Name\" />\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"text\" value={password} onChange={handlePasswordChange} placeholder=\"Enter Password\" />\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicDesignation\">\n                                    <Form.Label>Designation</Form.Label>\n                                    <Form.Select aria-label=\"Designation\" value={designation} onChange={handleDesignationChange}>\n                                        <option value=\"Manager\">Manager</option>\n                                        <option value=\"Gatekeeper\">Gatekeeper</option>\n                                        <option value=\"Employee\">Employee</option>\n                                    </Form.Select>\n                                </Form.Group>\n                                \n                                <Form.Group className=\"mb-3\" controlId=\"formBasicDob\">\n                                    <Form.Label>Date of Birth</Form.Label>\n                                    <Form.Control type=\"text\" value={dob} onChange={handleDobChange} placeholder=\"Enter Date of birth\" />\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicSalary\">\n                                    <Form.Label>Salary</Form.Label>\n                                    <Form.Control type=\"text\" value={salary} onChange={handleSalaryChange} placeholder=\"Enter Salary\" />\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicRating\">\n                                    <Form.Label>Rating</Form.Label>\n                                    <Form.Control type=\"text\" value={rating} onChange={handleRatingChange} placeholder=\"Enter Rating\" />\n                                </Form.Group>\n\n                                <Button disabled={isLoading} variant=\"primary\" type=\"submit\">Save</Button>\n                            </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default AddEmployee;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Product/AddProduct.js",["126"],"import React, { useReducer, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Form, Card, Button } from \"react-bootstrap\";\nimport { URLS } from \"../../routes\";\nimport displayToast from \"../../utils/displayToast\";\nimport { validateInputField } from \"../../utils/validations\";\nimport { useHistory, useLocation } from \"react-router\";\nimport './AddProduct.css';\n\nconst initialState = {\n  productName: \"\",\n  quantity: 0,\n  price: 0,\n  id: -1,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"PRODUCT_NAME\":\n      return {\n        ...state,\n        productName: action.productName,\n      };\n\n    case \"PRODUCT_QUANTITY\":\n      return {\n        ...state,\n        quantity: action.quantity,\n      };\n\n    case \"PRODUCT_PRICE\":\n      return {\n        ...state,\n        price: action.price,\n      };\n\n    case \"RESET\":\n      return initialState;\n\n    case \"UPDATE_ALL_FIELDS\":\n      return action.state;\n\n    default:\n      return state;\n  }\n};\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction AddProduct() {\n  let query = useQuery();\n  const productId = query.get(\"id\");\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { productName, quantity, price, id } = state;\n  const history = useHistory();\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let isActive = true;\n    let isPageUpdate = false;\n\n    if (productId) {\n      isPageUpdate = true;\n    }\n\n    setIsUpdate(isPageUpdate);\n\n    if (isActive && isPageUpdate) {\n      setIsLoading(true);\n      fetchProduct();\n    } else {\n      setIsLoading(false);\n    }\n    return () => {\n      isActive = false;\n    };\n  }, []);\n\n  const fetchProduct = async () => {\n    const url = `${URLS.GET_PRODUCT_DETAILS}/${productId}`;\n\n    axios\n      .get(url)\n      .then(function (response) {\n        setIsLoading(false);\n        // console.log({response});\n        // debugger;\n        dispatch({ type: \"UPDATE_ALL_FIELDS\", state: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: \"error\", msg: error.msg });\n      });\n  };\n\n  const handleProductNameChange = (event) => {\n    dispatch({\n      type: \"PRODUCT_NAME\",\n      productName: event.target.value,\n    });\n  };\n\n  const handleQuantityChange = (event) => {\n    dispatch({\n      type: \"PRODUCT_QUANTITY\",\n      quantity: event.target.value,\n    });\n  };\n\n  const handlePriceChange = (event) => {\n    dispatch({\n      type: \"PRODUCT_PRICE\",\n      price: event.target.value,\n    });\n  };\n\n  const resetForm = () => {\n    dispatch({\n      type: \"RESET\",\n    });\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    if (\n      validateInputField({ field: productName, fieldName: \"product name\" }) &&\n      validateInputField({ field: quantity, fieldName: \"quantity\" }) &&\n      validateInputField({ field: price, fieldName: \"price\" })\n    ) {\n      const body = { productName, quantity, price, purchaseOrder: [] };\n      const url = isUpdate ? `${URLS.EDIT_PRODUCT}/${productId}` : URLS.ADD_PRODUCT;\n\n      if (isUpdate) {\n        body.id = id;\n      }\n      debugger;\n      axios[isUpdate ? \"put\" : \"post\"](url, body)\n        .then(function (response) {\n          const { status } = response;\n          if (status === 200) {\n            resetForm();\n            displayToast({\n              type: \"success\",\n              msg: `${\n                isUpdate ? productName + \" updated\" : \"Product added\"\n              } successfully!`,\n            });\n            setIsLoading(false);\n            setTimeout(() => {\n              history.push(\"/manage-products\");\n            }, 1000);\n          } else {\n            displayToast({ type: \"error\", msg: \"Oops! Something went wrong.\" });\n            setIsLoading(false);\n          }\n        })\n        .catch(function (error) {\n          setIsLoading(false);\n          console.log(error);\n          displayToast({ type: \"error\", msg: error.msg });\n        });\n    } else {\n      setIsLoading(false);\n      // displayToast({type : \"error\", msg : \"Login Failed!\"});\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Container fluid=\"lg\">\n        <Row className=\"container-main\">\n          <Col>\n            <h3 className=\"center-align\">\n              {isUpdate ? \"Update\" : \"Add\"} Product\n            </h3>\n          </Col>\n        </Row>\n        <Row className=\"container-main\">\n          <Col md={{ span: 6, offset: 3 }}>\n            <Card>\n              <Card.Body>\n                <Form onSubmit={submitForm}>\n                  <Form.Group controlId=\"formBasicProductName\">\n                    <Form.Label>Product Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={productName}\n                      onChange={handleProductNameChange}\n                      placeholder=\"Enter Product Name\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicQuantity\">\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      value={quantity}\n                      onChange={handleQuantityChange}\n                      placeholder=\"Enter Quantity\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPrice\">\n                    <Form.Label>Price</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      value={price}\n                      onChange={handlePriceChange}\n                      placeholder=\"Enter Price\"\n                    />\n                  </Form.Group>\n\n                  <Button\n                    disabled={isLoading}\n                    variant=\"success\"\n                    type=\"submit\"\n                    block\n                  >\n                    {isLoading ? \"Saving...\" : \"Save\"}\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\nexport default AddProduct;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/PurchaseOrder/ManagePurchaseOrder.js",["127"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Button, Col, Table, Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { URLS } from \"../../routes\";\nimport displayToast from \"../../utils/displayToast\";\n\nfunction ManagePurchaseOrder() {\n  const [pos, setPos] = useState([]);\n  const [currentPo, setCurrentPo] = useState(null);\n  const [currentPo1, setCurrentPo1] = useState(null);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => {\n    setShow(false);\n    setCurrentPo(null);\n  };\n\n  const [show1, setShow1] = useState(false);\n  const handleClose1 = () => {\n    setShow1(false);\n    setCurrentPo1(null);\n  };\n\n  const handleShow = () => setShow(true);\n  const handleShow1 = () => setShow1(true);\n\n  useEffect(() => {\n    let isActive = true;\n\n    if (isActive) {\n      fetchPos();\n    }\n    return () => {\n      isActive = false;\n    };\n  }, []);\n\n  const fetchPos = async () => {\n    const url = URLS.GET_ALL_PURCHASE_ORDERS;\n    axios\n      .get(url)\n      .then(function (response) {\n        console.log(response);\n        const { status } = response;\n        if (status === 200) {\n          setPos(response.data);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: \"error\", msg: \"Oops! Something went wrong\" });\n      });\n  };\n\n  const makePayment = async () => {\n    const url = URLS.GENERATE_INVOICE + currentPo1.id;\n\n    axios\n      .post(url)\n      .then(function (response) {\n        if (response.status === 200) {\n          handleClose1();\n          setCurrentPo1(null);\n          displayToast({\n            type: \"success\",\n            msg: \"Invoice generated successfully!\",\n          });\n          fetchPos();\n        } else {\n          displayToast({ type: \"error\", msg: \"Oops! Something went wrong\" });\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: \"error\", msg: \"Oops! Something went wrong\" });\n      });\n  };\n\n  const deletePoConfirmation = (b) => {\n    setCurrentPo(b);\n    handleShow();\n  };\n\n  const deletePurchaseOrder = async () => {\n    const url = URLS.DELETE_PURCHASE_ORDER + currentPo.id;\n    // const data = {\n    //     id : currentBuyer.id\n    // };\n    axios\n      .delete(url)\n      .then(function (response) {\n        handleClose();\n        // console.log(response);\n        displayToast({\n          type: \"success\",\n          msg: \"Purchase Order deleted successfully!\",\n        });\n        fetchPos();\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: \"error\", msg: \"Oops! Something went wrong\" });\n      });\n  };\n\n  const generateInvoiceConfirmation = (item) => {\n    setCurrentPo1(item);\n    handleShow1();\n  };\n\n  return (\n    <Container className=\"container-main\">\n      <Row className=\"container-main\">\n        <Col>\n          <Link to=\"/add-purchase-order\">\n            <Button variant=\"dark\">Add Purchase Order</Button>\n          </Link>\n        </Col>\n        <Col>\n          <h3 style={{ color: '#deb887', fontweight:'bold' }}>Purchase Order</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Table striped bordered hover>\n          <div id=\"customers\">\n            <thead>\n              <tr>\n                <th>Sr. No.</th>\n                <th>Company Name</th>\n                <th>Total Products</th>\n                <th>Total Price</th>\n                <th>Payment Date</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {pos.map((item, index) => {\n                const {\n                  id,\n                  products,\n                  paymentDueDate,\n                  paid,\n                  invoice,\n                  buyer = {},\n                  totalAmount,\n                } = item;\n                let { companyName = \"\" } = buyer;\n\n                return (\n                  <tr key={id}>\n                    <td>{index + 1}</td>\n                    <td>{companyName}</td>\n                    <td>{products.length}</td>\n                    <td>{totalAmount}</td>\n                    <td>{paymentDueDate}</td>\n                    <td>{paid ? \"Paid\" : \"Unpaid\"}</td>\n                    <td>\n                      {/* <Link to={`/edit-purchase-order/?id=${id}`}><Button variant=\"primary\">Edit</Button>{' '}</Link> */}\n                      {paid ? (\n                        \" - \"\n                      ) : (\n                        <React.Fragment>\n                          <Button\n                            onClick={() => generateInvoiceConfirmation(item)}\n                            variant=\"secondary\"\n                          >\n                            Generate Invoice\n                          </Button>{\" \"}\n                          <Button\n                            onClick={() => deletePoConfirmation(item)}\n                            variant=\"danger\"\n                          >\n                            Delete\n                          </Button>\n                        </React.Fragment>\n                      )}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </div>\n        </Table>\n      </Row>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this Purchase Order?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={deletePurchaseOrder}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={show1} onHide={handleClose1}>\n        <Modal.Header closeButton>\n          <Modal.Title>Payment Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          You are about to generate invoice and make full payment. Are you sure\n          you want to continue?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={handleClose1}>\n            No\n          </Button>\n          <Button variant=\"info\" onClick={makePayment}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default ManagePurchaseOrder;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/PurchaseOrder/AddPurchaseOrder.js",["128","129","130","131","132","133","134"],"import React, { useReducer, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Card,\n  Button,\n  FloatingLabel,\n  Table,\n} from \"react-bootstrap\";\nimport { URLS } from \"../../routes\";\nimport displayToast from \"../../utils/displayToast\";\nimport { validateInputField } from \"../../utils/validations\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport dayjs from \"dayjs\";\nimport { useHistory, useLocation } from \"react-router\";\n\nconst initialState = {\n  selectedProducts: [],\n  paymentDate: new Date(),\n  id: -1,\n  buyerId: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_PRODUCT\":\n      return {\n        ...state,\n        selectedProducts: [...state.selectedProducts, action.product],\n      };\n\n    case \"DELETE_PRODUCT\":\n      return {\n        ...state,\n        selectedProducts: state.selectedProducts.filter(\n          (p) => p.id !== action.product.id\n        ),\n      };\n\n    case \"UPDATE_BUYER\":\n      return {\n        ...state,\n        buyerId: action.buyerId,\n      };\n\n    case \"UPDATE_PAYMENT_DATE\":\n      return {\n        ...state,\n        paymentDate: action.paymentDate,\n      };\n\n    case \"UPDATE_QUANTITY\":\n      return {\n        ...state,\n        selectedProducts: action.productList,\n      };\n\n    case \"UPDATE_ALL_FIELDS\":\n      return action.state;\n\n    case \"RESET\":\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nlet isSubmitted = false;\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction AddPurchaseOrder() {\n  let query = useQuery();\n  const poId = query.get(\"id\");\n\n  const [productList, setProductList] = useState([]);\n  const [currentProduct, setCurrentProduct] = useState(null);\n\n  const [buyers, setBuyers] = useState([]);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { selectedProducts, paymentDate, buyerId } = state;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const history = useHistory();\n\n  const [isUpdate, setIsUpdate] = useState(false);\n\n  const fetchProducts = async () => {\n    const url = URLS.GET_ALL_PRODUCTS;\n    axios\n      .get(url)\n      .then(function (response) {\n        setProductList(response.data);\n        fetchBuyers();\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: \"error\", msg: \"Oops! Something went wrong\" });\n      });\n  };\n\n  const fetchBuyers = async () => {\n    const url = URLS.GET_ALL_BUYERS;\n    axios\n      .get(url)\n      .then(function (response) {\n        // console.log(response);\n        setBuyers(response.data);\n        if (isUpdate) {\n          fetchCurrentPo();\n        } else {\n          setIsLoading(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: \"error\", msg: \"Oops! Something went wrong\" });\n      });\n  };\n\n  useEffect(() => {\n    let isActive = true;\n\n    if (isActive) {\n      isSubmitted = false;\n      setIsUpdate(!!poId);\n      fetchProducts();\n    }\n\n    return () => {\n      isActive = false;\n    };\n  }, []);\n\n  const fetchCurrentPo = async () => {\n    const url = `${URLS.GET_PURCHASE_ORDERS_DETAILS}/${poId}`;\n    axios\n      .get(url)\n      .then(function (response) {\n        const { status } = response;\n\n        if (status === 200) {\n          dispatch({ type: \"UPDATE_ALL_FIELDS\", state: response.data });\n        } else {\n          displayToast({ type: \"error\", msg: \"Oops! Something went wrong.\" });\n          setIsLoading(false);\n        }\n      })\n      .catch(function (error) {\n        setIsLoading(false);\n        console.log(error);\n        displayToast({ type: \"error\", msg: error.msg });\n      });\n  };\n\n  const handleProductChangne = (e) => {\n    setCurrentProduct(e.target.value);\n  };\n\n  const addProduct = (e) => {\n    setIsLoading(true);\n    e.preventDefault();\n    if (currentProduct) {\n      if (selectedProducts.findIndex((p) => p.id == currentProduct) === -1) {\n        const product = productList.find((i) => i.id == currentProduct);\n        dispatch({ type: \"ADD_PRODUCT\", product });\n      } else {\n        displayToast({ type: \"error\", msg: \"Product already added in list!\" });\n      }\n    } else {\n      displayToast({ type: \"error\", msg: \"Please select a product!\" });\n    }\n    setIsLoading(false);\n  };\n\n  const deleteProduct = (product) => {\n    dispatch({ type: \"DELETE_PRODUCT\", product });\n  };\n\n  const handleQuantityChange = (e, product) => {\n    const quantity = e.target.value;\n    let isValid = false;\n\n    const productList = selectedProducts.map((i) => {\n      if (i.id == product.id) {\n        if (quantity > i.quantity) {\n          displayToast({\n            type: \"error\",\n            msg: \"Quantity cannot be more than available quantity!\",\n          });\n          return false;\n        } else {\n          isValid = true;\n          return { ...i, selectedQuantity: quantity };\n        }\n      }\n      return i;\n    });\n\n    if (isValid) {\n      dispatch({ type: \"UPDATE_QUANTITY\", productList });\n    }\n  };\n\n  const handleBuyerChangne = (e) => {\n    dispatch({ type: \"UPDATE_BUYER\", buyerId: e.target.value });\n  };\n\n  const handleDateChange = (date) => {\n    dispatch({ type: \"UPDATE_PAYMENT_DATE\", paymentDate: date });\n  };\n\n  const submitPo = () => {\n    if (!isSubmitted) {\n      isSubmitted = true;\n      setIsLoading(true);\n      let totalCost = 0;\n\n      if (\n        validateInputField({ field: buyerId, fieldName: \"buyer name\" }) &&\n        validateInputField({ field: paymentDate, fieldName: \"payment date\" })\n      ) {\n        if (selectedProducts.length > 0) {\n          let isValid = true;\n          for (let i = 0; i < selectedProducts.length; i++) {\n            const { selectedQuantity } = selectedProducts[i];\n            if (!selectedQuantity) {\n              isValid = false;\n              displayToast({\n                type: \"error\",\n                msg: \"Please select a quantity for each product!\",\n              });\n              return false;\n            }\n          }\n          const date = dayjs(paymentDate).format(\"MM-DD-YYYY\");\n\n          if (isValid) {\n            const buyer = buyers.find((b) => b.id == state.buyerId);\n\n            const userProducts = selectedProducts.map((item) => {\n              totalCost += item.selectedQuantity ? item.selectedQuantity * item.price : 0;\n              return {\n                product: item,\n                quantity: parseInt(item.selectedQuantity),\n              };\n            });\n\n            const body = {\n              buyer,\n              paymentDueDate: date,\n              products: userProducts,\n              totalAmount: totalCost,\n              paid: false,\n            };\n\n            submitPoAPi(body);\n          }\n        } else {\n          isSubmitted = false;\n          setIsLoading(false);\n          displayToast({ type: \"error\", msg: \"Please select a product!\" });\n        }\n      } else {\n        isSubmitted = false;\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const submitPoAPi = async (body) => {\n    const url = URLS.ADD_PURCHASE_ORDERS;\n\n    axios\n      .post(url, body)\n      .then(function (response) {\n        const { status } = response;\n        if (status === 200) {\n          resetForm();\n          displayToast({\n            type: \"success\",\n            msg: `Purchase Order added successfully!`,\n          });\n          setIsLoading(false);\n          setTimeout(() => {\n            history.push(\"/manage-purchase-order\");\n          }, 1000);\n        } else {\n          displayToast({ type: \"error\", msg: \"Oops! Something went wrong.\" });\n          setIsLoading(false);\n        }\n      })\n      .catch(function (error) {\n        setIsLoading(false);\n        console.log(error);\n        displayToast({ type: \"error\", msg: error.msg });\n      });\n  };\n\n  const resetForm = () => {\n    dispatch({ type: \"RESET\" });\n  };\n\n  let totalPrice = 0,\n    totalAvlQty = 0,\n    totalQty = 0,\n    totalAmount = 0;\n\n  selectedProducts.forEach((i) => {\n    // totalPrice += i.price;\n    // totalAvlQty += i.quantity;\n    totalQty += i.selectedQuantity ? parseInt(i.selectedQuantity) : 0;\n    totalPrice += i.selectedQuantity ? i.selectedQuantity * i.price : 0;\n  });\n\n  return (\n    <React.Fragment>\n      <Container fluid=\"lg\">\n        <Row className=\"container-main\">\n          <Col lg={6}>\n            <h3 className=\"center-align\" style={{ color: '#deb887', fontweight:'bold' }}>Add Purchase Order</h3>\n          </Col>\n        </Row>\n\n        <Row className=\"container-main\">\n          <Col md={{ span: 10, offset: 1 }}>\n            <Card>\n              <Card.Body>\n                {/* <Form onSubmit={addProduct}> */}\n                <Row>\n                  <Col lg={6}>\n                    <FloatingLabel\n                      controlId=\"floatingSelect\"\n                      label=\"Seelct Buyer\"\n                    >\n                      <Form.Select\n                        aria-label=\"Buyer List\"\n                        onChange={handleBuyerChangne}\n                        defaultValue={buyerId}\n                      >\n                        <option value=\"\" selected disabled>\n                          Select a Buyer\n                        </option>\n                        {buyers.map((b) => {\n                          return (\n                            <option key={b.id} value={b.id}>\n                              {b.companyName} - {b.ownerName}\n                            </option>\n                          );\n                        })}\n                      </Form.Select>\n                    </FloatingLabel>\n                  </Col>\n                  <Col lg={6}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicQuantity\">\n                      <Form.Label>Payment Date</Form.Label>\n                      <DatePicker\n                        selected={paymentDate}\n                        onChange={(date) => handleDateChange(date)}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <br />\n                <Row>\n                  <Col lg={5}>\n                    <FloatingLabel\n                      controlId=\"floatingSelect\"\n                      label=\"Seelct Products\"\n                    >\n                      <Form.Select\n                        aria-label=\"Product List\"\n                        onChange={handleProductChangne}\n                      >\n                        <option value=\"\" selected disabled>\n                          Select a Product\n                        </option>\n                        {productList.map((product) => {\n                          return (\n                            <option key={product.id} value={product.id}>\n                              {product.productName}\n                            </option>\n                          );\n                        })}\n                      </Form.Select>\n                    </FloatingLabel>\n                  </Col>\n                  <Col lg={1}>\n                    <Button\n                      variant=\"primary\"\n                      type=\"button\"\n                      onClick={addProduct}\n                      disabled={isLoading}\n                    >\n                      Add\n                    </Button>\n                  </Col>\n                </Row>\n                {/* </Form> */}\n              </Card.Body>\n            </Card>\n            <br />\n            <Card>\n              <Card.Body>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>Sr. No.</th>\n                      <th>Product Name</th>\n                      <th>Price</th>\n                      <th>Available Quantity</th>\n                      <th>Quantity</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {selectedProducts.map((product, index) => {\n                      const {\n                        id,\n                        productName,\n                        quantity,\n                        price = 0,\n                        selectedQuantity = 0,\n                      } = product;\n\n                      return (\n                        <tr key={id}>\n                          <td>{index + 1}</td>\n                          <td>{productName}</td>\n                          <td>{price}</td>\n                          <td>{quantity}</td>\n                          <th>\n                            <Form.Group\n                              className=\"mb-3\"\n                              controlId=\"formBasicQuantity\"\n                            >\n                              <Form.Label>Quantity</Form.Label>\n                              <Form.Control\n                                type=\"number\"\n                                value={selectedQuantity}\n                                onChange={(e) =>\n                                  handleQuantityChange(e, product)\n                                }\n                                placeholder=\"Enter Quantity\"\n                              />\n                            </Form.Group>\n                          </th>\n                          <td>\n                            <Button\n                              onClick={() => deleteProduct(product)}\n                              variant=\"danger\"\n                            >\n                              Delete\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                  <tfoot>\n                    <tr>\n                      <td colSpan=\"2\">Total</td>\n                      <td>{totalPrice}</td>\n                      {/* <td>{totalAvlQty}</td> */}\n                      <td></td>\n                      <td>\n                        <Form.Group\n                          className=\"mb-3\"\n                          controlId=\"formBasicQuantity\"\n                        >\n                          <Form.Control\n                            type=\"number\"\n                            readOnly\n                            value={totalQty}\n                            placeholder=\"Enter Quantity\"\n                          />\n                        </Form.Group>\n                      </td>\n                      <td></td>\n                    </tr>\n                  </tfoot>\n                </Table>\n              </Card.Body>\n            </Card>\n            <br />\n            <Row>\n              <Col md={{ span: 6, offset: 5 }}>\n                {/* <Form onSubmit={submitPo}> */}\n                <Button\n                  variant=\"success\"\n                  disabled={isLoading}\n                  className=\"center-align\"\n                  type=\"button\"\n                  onClick={submitPo}\n                >\n                  Save\n                </Button>\n                {/* </Form> */}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default AddPurchaseOrder;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/pages/Invoice/ManageInvoice.js",["135","136","137"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Button, Col, Table, Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { URLS } from \"../../routes\";\nimport displayToast from \"../../utils/displayToast\";\n\nfunction ManageInvoice() {\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let isActive = true;\n\n    if (isActive) {\n      fetchInvoices();\n    }\n    return () => {\n      isActive = false;\n    };\n  }, []);\n\n  const fetchInvoices = async () => {\n    const url = URLS.GET_ALL_INVOICE;\n    axios\n      .get(url)\n      .then(function (response) {\n        console.log(response);\n        setInvoices(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n        displayToast({ type: \"error\", msg: \"Oops! Something went wrong\" });\n      });\n  };\n\n  return (\n    <Container className=\"container-main\">\n      <Row className=\"container-main\">\n        <Col>\n          <h3 style={{ color: '#deb887', fontweight:'bold' }}>Buyers Invoices</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Table striped bordered hover>\n          <div id=\"customers\">\n            <thead>\n              <tr>\n                <th>Sr. No.</th>\n                <th>Company Name</th>\n                <th>Total Products</th>\n                <th>Total Quantity</th>\n                <th>Total Price</th>\n                <th>Payment Date</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {invoices.map((item, index) => {\n                const { id, purchaseOrder, paymentDate } = item;\n                const { products, buyer = {}, totalAmount } = purchaseOrder;\n                let { companyName = \"\" } = buyer;\n                let qty = products.reduce(\n                  (acc, current) => acc + current.quantity,\n                  0\n                );\n\n                return (\n                  <tr key={id}>\n                    <td>{index + 1}</td>\n                    <td>{companyName}</td>\n                    <td>{products.length}</td>\n                    <td>{qty}</td>\n                    <td>{totalAmount}</td>\n                    <td>{paymentDate}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </div>\n        </Table>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ManageInvoice;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/components/Layout/Layout.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/utils/displayToast.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/utils/validations.js",[],"/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/components/Navbar/Sidenav.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useContext } from \"react\";\nimport SideNav, {\n  Toggle,\n  Nav,\n  NavItem,\n  NavIcon,\n  NavText,\n} from \"@trendmicro/react-sidenav\";\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCoffee,\n  faHome,\n  faThermometer,\n  faUser,\n  faUserTie,\n  faFileInvoiceDollar,\n  faUserTag,\n  faReceipt,\n  faChartPie,\n  faCartPlus,\n  faCarAlt,\n  faCubes,\n  faUserFriends,\n  faAddressBook,\n  faShoppingCart,\n  faBoxOpen,\n  faPeopleCarry,\n  faFileInvoice,\n  faMoneyBill,\n  faBullseye,\n  faCube,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport displayToast from \"../../utils/displayToast\";\nimport { Button, Navbar, Container } from \"react-bootstrap\";\n\n\nfunction Sidenav() {\n  const history = useHistory();\n  const location = useLocation();\n  const { isLoggedIn, setUserData, userData } = useContext(AuthContext);\n\n  const logoutUser = () => {\n    displayToast(\"Logged out successfully!\", \"success\");\n\n    setTimeout(() => {\n      setUserData(null);\n      history.push(\"/\");\n    }, 1000);\n  };\n\n  if (!isLoggedIn) {\n    return null;\n  } else {\n    return (\n      <React.Fragment>\n        <Navbar>\n          <Container>\n          <Navbar.Brand\n            href=\"/\"\n            style={{\n              fontFamily: 'Your Custom Font', // Add your custom font-family\n              fontSize: '24px', // Adjust the font size as needed\n              fontWeight: 'bold', // Set the font weight to bold if desired\n              color: '#333', // Set the color as needed\n              // Add any other styling you'd like\n            }}\n          >Inventory Control System</Navbar.Brand>\n            <Navbar.Collapse className=\"justify-content-end\">\n              <Navbar.Text>\n                <FontAwesomeIcon\n                    icon={faUserTie}\n                    style={{\n                      fontSize: '1.5rem', // Larger icon size\n                      marginRight: '8px', // Space between icon and text\n                      verticalAlign: 'middle' // Aligns icon with text\n                    }}\n                />\n                <span style={{\n                  verticalAlign: 'middle', // Aligns text with icon\n                  fontSize: '1rem', // Font size for the user info, adjust as needed\n                  fontWeight: 'bold', // Optional: if you want the name and designation to be bold\n                  color: '#fff' // Color of the text\n                }}>\n      {userData.fullName} - <b>{userData.designation}</b>\n    </span>\n              </Navbar.Text>\n            </Navbar.Collapse>\n\n\n            <Navbar.Collapse className=\"justify-content-end\">\n              <Button variant=\"outline-dark\" className=\"\" onClick={logoutUser}>\n                Logout\n              </Button>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n        <SideNav\n          className=\"side--nav\"\n          onSelect={(selected) => {\n            const to = \"/\" + selected;\n            if (location.pathname !== to) {\n              history.push(to);\n            }\n          }}\n        >\n          <SideNav.Toggle />\n          <SideNav.Nav defaultSelected=\"home\">\n            {/* <NavItem eventKey=\"/home\">\n                        <NavIcon>\n                        <FontAwesomeIcon icon={faHome} className=\"side-nav-icons\"/>\n                        </NavIcon>\n                        <NavText>\n                            Home\n                        </NavText>\n                    </NavItem> */}\n            <NavItem eventKey=\"manage-products\">\n              <NavIcon>\n                <FontAwesomeIcon icon={faCubes} className=\"side-nav-icons\" />\n                {/* <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} /> */}\n              </NavIcon>\n              <NavText>Add Products</NavText>\n            </NavItem>\n\n            {userData.designation.toUpperCase() === \"MANAGER\" && (\n              <NavItem eventKey=\"manage-employees\">\n                <NavIcon>\n                  <FontAwesomeIcon\n                    icon={faUserTie}\n                    className=\"side-nav-icons\"\n                  />\n                  {/* <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} /> */}\n                </NavIcon>\n                <NavText>Add Employees</NavText>\n              </NavItem>\n            )}\n\n            <NavItem eventKey=\"manage-buyers\">\n              <NavIcon>\n                <FontAwesomeIcon\n                  icon={faUserFriends}\n                  className=\"side-nav-icons\"\n                />\n                {/* <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} /> */}\n              </NavIcon>\n              <NavText>View Buyers</NavText>\n            </NavItem>\n\n            <NavItem eventKey=\"manage-purchase-order\">\n              <NavIcon>\n                <FontAwesomeIcon\n                  icon={faShoppingCart}\n                  className=\"side-nav-icons\"\n                />\n                {/* <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} /> */}\n              </NavIcon>\n              <NavText>Purchase Orders</NavText>\n            </NavItem>\n\n            <NavItem eventKey=\"manage-invoice\">\n              <NavIcon>\n                <FontAwesomeIcon icon={faFileInvoiceDollar} className=\"side-nav-icons\" />\n                {/* <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} /> */}\n              </NavIcon>\n              <NavText>View Invoice</NavText>\n            </NavItem>\n          </SideNav.Nav>\n        </SideNav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Sidenav;\n","/Users/anirbandutta/Downloads/DP-Project/InventoryManagementSystem/frontend/src/routes/index.js",[],{"ruleId":"156","severity":1,"message":"157","line":10,"column":8,"nodeType":"158","messageId":"159","endLine":10,"endColumn":15},{"ruleId":"156","severity":1,"message":"160","line":38,"column":11,"nodeType":"158","messageId":"159","endLine":38,"endColumn":19},{"ruleId":"156","severity":1,"message":"161","line":38,"column":34,"nodeType":"158","messageId":"159","endLine":38,"endColumn":44},{"ruleId":"156","severity":1,"message":"162","line":41,"column":9,"nodeType":"158","messageId":"159","endLine":41,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":74,"column":22,"nodeType":"165","messageId":"166","endLine":74,"endColumn":24},{"ruleId":"156","severity":1,"message":"167","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"168","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":19},{"ruleId":"156","severity":1,"message":"169","line":7,"column":3,"nodeType":"158","messageId":"159","endLine":7,"endColumn":11},{"ruleId":"156","severity":1,"message":"170","line":8,"column":3,"nodeType":"158","messageId":"159","endLine":8,"endColumn":22},{"ruleId":"156","severity":1,"message":"171","line":9,"column":3,"nodeType":"158","messageId":"159","endLine":9,"endColumn":12},{"ruleId":"156","severity":1,"message":"172","line":10,"column":3,"nodeType":"158","messageId":"159","endLine":10,"endColumn":17},{"ruleId":"156","severity":1,"message":"173","line":11,"column":3,"nodeType":"158","messageId":"159","endLine":11,"endColumn":19},{"ruleId":"156","severity":1,"message":"174","line":12,"column":3,"nodeType":"158","messageId":"159","endLine":12,"endColumn":12},{"ruleId":"156","severity":1,"message":"175","line":15,"column":3,"nodeType":"158","messageId":"159","endLine":15,"endColumn":11},{"ruleId":"156","severity":1,"message":"176","line":16,"column":3,"nodeType":"158","messageId":"159","endLine":16,"endColumn":17},{"ruleId":"156","severity":1,"message":"177","line":17,"column":3,"nodeType":"158","messageId":"159","endLine":17,"endColumn":18},{"ruleId":"156","severity":1,"message":"178","line":18,"column":3,"nodeType":"158","messageId":"159","endLine":18,"endColumn":8},{"ruleId":"156","severity":1,"message":"179","line":26,"column":5,"nodeType":"158","messageId":"159","endLine":26,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":78,"column":6,"nodeType":"182","endLine":78,"endColumn":8,"suggestions":"183"},{"ruleId":"156","severity":1,"message":"184","line":5,"column":53,"nodeType":"158","messageId":"159","endLine":5,"endColumn":57},{"ruleId":"180","severity":1,"message":"185","line":110,"column":8,"nodeType":"182","endLine":110,"endColumn":10,"suggestions":"186"},{"ruleId":"180","severity":1,"message":"187","line":80,"column":6,"nodeType":"182","endLine":80,"endColumn":8,"suggestions":"188"},{"ruleId":"156","severity":1,"message":"189","line":146,"column":19,"nodeType":"158","messageId":"159","endLine":146,"endColumn":26},{"ruleId":"180","severity":1,"message":"190","line":142,"column":6,"nodeType":"182","endLine":142,"endColumn":8,"suggestions":"191"},{"ruleId":"163","severity":1,"message":"164","line":173,"column":50,"nodeType":"165","messageId":"166","endLine":173,"endColumn":52},{"ruleId":"163","severity":1,"message":"164","line":174,"column":54,"nodeType":"165","messageId":"166","endLine":174,"endColumn":56},{"ruleId":"163","severity":1,"message":"164","line":194,"column":16,"nodeType":"165","messageId":"166","endLine":194,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":248,"column":51,"nodeType":"165","messageId":"166","endLine":248,"endColumn":53},{"ruleId":"156","severity":1,"message":"192","line":314,"column":5,"nodeType":"158","messageId":"159","endLine":314,"endColumn":16},{"ruleId":"156","severity":1,"message":"193","line":316,"column":5,"nodeType":"158","messageId":"159","endLine":316,"endColumn":16},{"ruleId":"156","severity":1,"message":"194","line":3,"column":26,"nodeType":"158","messageId":"159","endLine":3,"endColumn":32},{"ruleId":"156","severity":1,"message":"195","line":3,"column":46,"nodeType":"158","messageId":"159","endLine":3,"endColumn":51},{"ruleId":"156","severity":1,"message":"196","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":14},{"ruleId":"156","severity":1,"message":"197","line":3,"column":3,"nodeType":"158","messageId":"159","endLine":3,"endColumn":9},{"ruleId":"156","severity":1,"message":"198","line":4,"column":3,"nodeType":"158","messageId":"159","endLine":4,"endColumn":6},{"ruleId":"156","severity":1,"message":"169","line":14,"column":3,"nodeType":"158","messageId":"159","endLine":14,"endColumn":11},{"ruleId":"156","severity":1,"message":"199","line":15,"column":3,"nodeType":"158","messageId":"159","endLine":15,"endColumn":9},{"ruleId":"156","severity":1,"message":"200","line":16,"column":3,"nodeType":"158","messageId":"159","endLine":16,"endColumn":16},{"ruleId":"156","severity":1,"message":"201","line":17,"column":3,"nodeType":"158","messageId":"159","endLine":17,"endColumn":9},{"ruleId":"156","severity":1,"message":"202","line":20,"column":3,"nodeType":"158","messageId":"159","endLine":20,"endColumn":12},{"ruleId":"156","severity":1,"message":"203","line":21,"column":3,"nodeType":"158","messageId":"159","endLine":21,"endColumn":12},{"ruleId":"156","severity":1,"message":"204","line":22,"column":3,"nodeType":"158","messageId":"159","endLine":22,"endColumn":13},{"ruleId":"156","severity":1,"message":"205","line":23,"column":3,"nodeType":"158","messageId":"159","endLine":23,"endColumn":13},{"ruleId":"156","severity":1,"message":"206","line":24,"column":3,"nodeType":"158","messageId":"159","endLine":24,"endColumn":11},{"ruleId":"156","severity":1,"message":"207","line":27,"column":3,"nodeType":"158","messageId":"159","endLine":27,"endColumn":16},{"ruleId":"156","severity":1,"message":"208","line":29,"column":3,"nodeType":"158","messageId":"159","endLine":29,"endColumn":12},{"ruleId":"156","severity":1,"message":"209","line":30,"column":3,"nodeType":"158","messageId":"159","endLine":30,"endColumn":16},{"ruleId":"156","severity":1,"message":"210","line":31,"column":3,"nodeType":"158","messageId":"159","endLine":31,"endColumn":16},{"ruleId":"156","severity":1,"message":"211","line":32,"column":3,"nodeType":"158","messageId":"159","endLine":32,"endColumn":14},{"ruleId":"156","severity":1,"message":"212","line":33,"column":3,"nodeType":"158","messageId":"159","endLine":33,"endColumn":13},{"ruleId":"156","severity":1,"message":"213","line":34,"column":3,"nodeType":"158","messageId":"159","endLine":34,"endColumn":9},"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'userData' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'ParticlesBg' is defined but never used.","'faCoffee' is defined but never used.","'faFileInvoiceDollar' is defined but never used.","'faFileAlt' is defined but never used.","'faFileDownload' is defined but never used.","'faShoppingBasket' is defined but never used.","'faUserTie' is defined but never used.","'faWeight' is defined but never used.","'faBalanceScale' is defined but never used.","'faWeightHanging' is defined but never used.","'faBox' is defined but never used.","'sectionStyle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'buyerId' and 'fetchBuyer'. Either include them or remove the dependency array.","ArrayExpression",["214"],"'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'employeeId' and 'fetchEmployee'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'fetchProduct' and 'productId'. Either include them or remove the dependency array.",["216"],"'invoice' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchProducts' and 'poId'. Either include them or remove the dependency array.",["217"],"'totalAvlQty' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Link' is defined but never used.","'Toggle' is defined but never used.","'Nav' is defined but never used.","'faHome' is defined but never used.","'faThermometer' is defined but never used.","'faUser' is defined but never used.","'faUserTag' is defined but never used.","'faReceipt' is defined but never used.","'faChartPie' is defined but never used.","'faCartPlus' is defined but never used.","'faCarAlt' is defined but never used.","'faAddressBook' is defined but never used.","'faBoxOpen' is defined but never used.","'faPeopleCarry' is defined but never used.","'faFileInvoice' is defined but never used.","'faMoneyBill' is defined but never used.","'faBullseye' is defined but never used.","'faCube' is defined but never used.",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [buyerId, fetchBuyer]",{"range":"226","text":"227"},"Update the dependencies array to be: [employeeId, fetchEmployee]",{"range":"228","text":"229"},"Update the dependencies array to be: [fetchProduct, productId]",{"range":"230","text":"231"},"Update the dependencies array to be: [fetchProducts, poId]",{"range":"232","text":"233"},[1745,1747],"[buyerId, fetchBuyer]",[2771,2773],"[employeeId, fetchEmployee]",[1771,1773],"[fetchProduct, productId]",[3156,3158],"[fetchProducts, poId]"]